library(devtools)
library(slidify)
install_github("slidify", "ramnathv")
install_github("ramnathv/slidify")
library(slidify)
getwd()
list.files()
setwd("./DevelopingDataProducts")
list.files()
author("first_deck")
listfiles()
list.files()
library(rCharts)
## Load the package
require(rCharts)
## Format the data
haireye = as.data.frame(HairEyeColor)
## Generate the plot
n1 = nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data = subset(haireye, Sex == 'Male')
)
##
n1
Jan2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/Jan4_Feb11_2016.csv")
Feb2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/Feb12_March15_2016.csv")
Mar2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/March16_April13_2016.csv")
Apr2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/April14_June6_2016.csv")
# remove columns 4,5,7 and 9 - are gross sales discounts, % sales and % quantity
Jan2016 <- Jan2016[,-c(4,5,7,9)]
Feb2016 <- Feb2016[,-c(4,5,7,9)]
Mar2016 <- Mar2016[,-c(4,5,7,9)]
Apr2016 <- Apr2016[,-c(4,5,7,9)]
temp1 <- transform(Jan2016, date = as.Date(as.character(date), "%m/%d/%Y"))
temp1$Sales.Less.Item.Disc <- as.numeric(sub(",","",temp1$Sales.Less.Item.Disc))
# combine February through June data
temp2 <- rbind(Feb2016,Mar2016)
temp2 <- rbind(temp2,Apr2016)
# change date to class "Date"" and Sales to "numeric""
temp2 <- transform(temp2, date = as.Date(as.character(date), "%m/%d/%Y"))
temp2$Sales.Less.Item.Disc <- as.numeric(sub(",","",temp2$Sales.Less.Item.Disc))
# combine January with the Feb - June data
YTD2016 <- rbind(temp1, temp2)
str(YTD2016)
print(paste("Number of NA's = ",(sum(is.na(YTD2016)))))
temp <- YTD2016
temp$date[1]
as.POSIXlt(temp$date[1])
wday(as.POSIXlt(temp$date[1]))
wkday(as.POSIXlt(temp$date[1]))
as.POSIXlt(temp$date[1])$wday
library(lubridate)
install.packages("lubridate")
library(lubridate)
weekday(as.POSIXlt(temp$date[1]))
weekdays(as.POSIXlt(temp$date[1]))
weekdays(temp$date[1])
temp$day <- weekdays(temp$date)
head(temp)
week(temp$date[1])
week(temp$date[1] + 7)
week(temp$date[1] + 35)
YTD2016 <- rbind(temp1, temp2)
colnames(YTD2016) <- c("Item", "Family", "Major", "Sales", "Qty", "Price", "Date")
head(YTD2016)
str(YTD2016)
print(paste("Number of NA's = ",(sum(is.na(YTD2016)))))
temp <- YTD2016
temp$day <- weekdays(temp$Date)
temp$week <- week(temp$Date)
dim(temp)
head(temp)
tail(temp)
temp1 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Date = temp$Date))
dim(temp1)
head(temp1)
109/5
which(temp1$Sales == 0)
which(temp1$Qty == 0)
View(temp1)
View(temp)
sum(temp$Sales)[1:171]
sum(temp$Sales[1:171])
head(temp)
library(ggplot2)
library(rCharts)
m1 <- mPlot(x="Date", y = c("Sales", "Qty"), type = "Line", data = temp1)
m1$set(pointSize = 0, lineWidth = 1)
m1
temp2 <- transform(temp1, Date = as.character(Date))
m1$set(pointSize = 0, lineWidth = 1)
m1
head(economics)
class(economics$date)
head(temp1)
class(temp1$Date)
head(econ)
econ = transform(economics, date = as.character(date))
head(econ)
class(econ$date)
head(temp2)
class(temp2$Date)
temp1 <- transform(temp1, Date = as.character(Date))
class(temp1$Date)
m1 <- mPlot(x="Date", y = c("Sales", "Qty"), type = "Line", data = temp1)
m1$set(pointSize = 0, lineWidth = 1)
m1
weekday(2016-02-09)
weekdays(2016-02-09)
weekdays("2016-02-09")
weekdays(as.date("2016-02-09"))
weekdays(as.Date("2016-02-09"))
m1$layer(x='2016-02-09', copy_layer=T, type='line', color=list(const='red'))
m1$addParams(width = 600, height = 300, dom = 'chart1',
title = "B003 Cafeteria Sales")
m1
m1$addParams(width = 600, height = 300, dom = 'chart1', title = "Percentage of Employed who are Senior Managers")
m1
m1 <- mPlot(x="Date", y = c("Sales", "Qty"), type = "Line", data = temp1)
m1$set(pointSize = 0, lineWidth = 1, title = "B003 Cafeteria Sales")
m1
m1 <- mPlot(x="Date", y = c("Sales", "Qty"), type = "Line", data = temp1)
m1$set(pointSize = 0, lineWidth = 1)
m1$set(title = "B003 Cafeteria Sales")
m1
n1 <- nPlot(x="Date", y = c("Sales", "Qty"), type = "Line", data = temp1)
n1$set(pointSize = 0, lineWidth = 1)
n1
n1 <- nPlot(x="Date", y = c("Sales", "Qty"), type = "lineChart", data = temp1)
n1
n1$set(pointSize = 0, lineWidth = 1)
n1
n1 <- nPlot(Sales~Date, data = temp1, type = "lineChart")
n1
head(temp1)
p6 <- nPlot(Sales ~ Date, data = temp1, type = 'lineChart')
p6
temp2 <- transform(temp1, Date = as.Date(Date))
head(temp2)
class(temp2$Date)
p6 <- nPlot(Sales ~ Date, data = temp2, type = 'lineChart')
p6
m1$container
getwd()
temp2 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Week = temp$week))
head(temp2)
n2 <- nPlot(x="Week", y = c("Sales", "Qty"), type = "lineChart", data = temp2)
n2
n2 <- nPlot(Sales ~ Week, type = "lineChart", data = temp2)
n2
temp2
n2 <- nPlot(Sales ~ Week, type = "lineChart", data = temp2[1:22,])
n2
n2 <- nPlot(Sales ~ Week, type = "lineChart", data = temp2)
n2
n2 <- nPlot(Sales ~ Week, type = "lineChart", data = temp2[1:22,])
n2$chart(forceY = c(0, 20000))
n2
n2 <- nPlot(c(Sales,Qty) ~ Week, type = "lineChart", data = temp2[1:22,])
n2$chart(forceY = c(0, 20000))
n2
n2
n2
n2 <- nPlot(Sales ~ Week, type = "lineChart", data = temp2[1:22,])
n2
n2$chart(forceY = c(0, 20000))
n2
ecm <- reshape2::melt(
economics[,c('date', 'uempmed', 'psavert')],
id = 'date'
)
dim(ecm)
head(ecm)
p7 <- nPlot(value ~ date, group = 'variable',
data = ecm,
type = 'lineWithFocusChart'
)
p7
temp2 <- reshape2::melt(
temp[,c('Date', 'Sales', 'Qty')],
id = 'Date'
)
dim(temp2)
head(temp2)
temp2 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Week = temp$week))
head(temp2)
temp2 <- reshape2::melt(
temp2[,c('Week', 'Sales', 'Qty')],
id = 'Week'
)
dim(temp2)
head(temp2)
tail(temp2)
p7 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = 'lineWithFocusChart'
)
p7
p7 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = 'lineChart'
)
p7
temp2 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Week = temp$week))
temp2 <- reshape2::melt(temp2[,c('Week', 'Sales', 'Qty')], id = 'Week')
n2 <- nPlot(value ~ Week, type = "lineChart", data = temp2[1:22,])
n2$chart(forceY = c(0, 20000))
n2
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2[1:22,]
, type = "lineChart"
)
n2$chart(forceY = c(0, 20000))
n2
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = 'lineChart'
)
n2
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2[1:22,],
type = "lineChart"
)
n2
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = "lineChart"
)
n2
head(temp2)
class(temp2$Week)
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2[-c(Week == 23),],
type = "lineChart"
)
which(temp2$Week == 23)
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2[-c(temp2$Week == 23),],
type = "lineChart"
)
n2
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2[-c(temp2$Week == 23),],
type = "lineChart"
)
n2$chart(forceY = c(0, 20000))
n2
dim(temp2)
tail(temp2)
temp2 <- temp2[-c($temp2 == 23),]
temp2 <- temp2[-c(temp2$Week == 23),]
dim(temp2)
tail(temp2)
temp2[22:25,]
temp2 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Week = temp$week))
dim(temp2)
temp2
temp2 <- temp2[1:(nrow(temp2)-1),]
temp2
temp2 <- reshape2::melt(temp2[,c('Week', 'Sales', 'Qty')], id = 'Week')
dim(temp2)
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = "lineChart"
)
n2$chart(forceY = c(0, 20000))
n2
n2$set(title = 'Sales and Qty Sold per week')
n2
n2$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
n2$set(title = 'Sales and Qty Sold per week')
n2
n2$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle_styled.html"
n2
n2$save("n2.html")
n2 <- nPlot(value ~ Week, group = 'variable',
data = temp2,
type = "lineChart"
)
n2$chart(forceY = c(0, 20000))
n2$templates$script <- "http://timelyportfolio.github.io/rCharts_nvd3_templates/chartWithTitle.html"
n2$set(title = 'B003 Cafeteria Sales and Qty Sold per week')
n2$xAxis(axisLabel = 'Week #')
n2
n2$save("n2.html")
lines(v=5)
n2$lines(v=5)
head(temp2)
n2$layer(y='value', copy_layer=T, type='line', color=list(const='red'))
View(temp2)
temp3 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Day = temp$day))
dim(temp3)
temp3
class(temp3$Day)
order(temp$day)
order(temp3$day)
order(temp3$Day)
temp3
temp3 <- temp3[c("Monday","Tuesday","Wednesday","Thursday","Friday"),]
temp3
temp3 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Day = temp$day))
temp3
temp4 <- temp3[c((Day == "Monday"),(Day = "Tuesday"),(Day = "Wednesday"),(Day = "Thursday"),(Day == "Friday")),]
temp4 <- temp3[c(2,4,5,3,1),]
temp4
temp3 <- reshape2::melt(temp3[,c('Day', 'Sales', 'Qty')], id = 'Day')
temp3 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Day = temp$day))
temp3 <- temp3[c(2,4,5,3,1),]  # Put in order, Monday - Friday
temp3
temp3 <- reshape2::melt(temp3[,c('Day', 'Sales', 'Qty')], id = 'Day')
temp
temp3
n3 <- nPlot(value ~ Day, group = 'variable',
type = 'multiBarChart',
data = temp3)
n3
n3$save("n3.html")
m1
m1$save("~/rprogramming/Apollo/m1.html")
n3 <- nPlot(value ~ Day, group = 'variable',
type = 'barChart',
data = temp3)
n3
n3 <- nPlot(value ~ Day, group = 'variable',
type = 'BarChart',
data = temp3)
n3
n3 <- nPlot(value ~ Day, group = 'variable',
type = 'multiBarHorizontalChart',
data = temp3)
n3
n3 <- nPlot(value ~ Day, group = 'variable',
type = 'multiBarChart',
data = temp3)
n3
head(temp)
str(temp$Major)
levels(temp$Major)
str(temp$Family)
levels(temp$Family)
temp4 <- temp[temp$Family == "Hot Beverage",]
dim(temp4)
View(testing)
View(temp4)
unique(temp4$Item)
hotBev <- temp$Family == "Hot Beverage"
length(hotBev)
dim(hotBev)
hotBev <- which(temp$Family == "Hot Beverage")
length(hotBev)
hotBev <- which(temp$Family == "Hot Beverage") + which(temp$Family == "JC-COFFEE") + which(temp$Family == "STAR-COFFEE")
hotBev <- which(temp$Family == "Hot Beverage")
head(hotBev)
hotBev <- c(which((temp$Family == "Hot Beverage") | (temp$Family == "JC-COFFEE") | (temp$Family == "STAR-COFFEE"))
)
hotBev <- c(which((temp$Family == "Hot Beverage") | (temp$Family == "JC-COFFEE") | (temp$Family == "STAR-COFFEE")))
length(hotBev)
length(which(temp$Family == "Hot Beverage"))
length(which(temp$Family == "JC-COFFEE"))
length(which(temp$Family == "STAR-COFFEE"))
395+15+338
hotBev <- c(which((temp$Family == "Hot Beverage") | (temp$Family == "JC-COFFEE") | (temp$Family == "STAR-COFFEE")))
temp4 <- temp[hotBev,]
dim(temp4)
tail(unique(temp$Date))
head(unique(temp$Date))
week("2016-06-06")
names(temp4)
temp4 <- temp[hotBev,-c("day","week")]
temp4 <- temp[hotBev,-c("temp$day","temp$week")]
temp4 <- subset(temp[hotBev,], select = -c(day,week))
dim(temp4)
head(temp4)
names(temp)
unique(temp4$Major)
temp4 <- subset(temp[hotBev,], select = -c(Major,day,week))
head(temp4)
dim(temp4)
dim(temp)
head(temp3)
tempx <- temp[temp$Date = "2016-01-04",]
tempx <- temp[temp$Date == "2016-01-04",]
dim(tempx)
length(unique(tempx$Item))
110*171
data618 <- read.csv("~/rprogramming/Loves/Store 618 POG Ref file 121615.csv")
dim(data618)  # 8138 rows, 19 columns
names(data618)
sum(!is.na(data618[,16:19]))  # this equals 0 - no non-NA values
head(data618)
View(data618)
data618 <- read.csv("~/rprogramming/Loves/Store 618 POG Ref file 121615.csv")
dim(data618)  # 8138 rows, 19 columns
pog618 <- read.csv("~/rprogramming/Loves/Store 618 POG Ref file 121615.csv")
dim(pog618)  # 8138 rows, 15 columns
names(pog618)
View(data618)
View(data618)
item618 <- read.csv("~/rprogramming/Loves/loves618.csv")
dim(item618)  # 8138 rows, 15 columns
names(item618)
length(unique(item618))
length(unique(item618$UPC))
match <- pgo618$UPC. %in% item618$UPC
match <- pog618$UPC. %in% item618$UPC
length(match)
length(pog618$UPC.)
str(match)
sum(match)
which(match == TRUE)
pog618[which(match == TRUE),]
View(pog618)
levels(pog618$S.Prod.Status.)
length(unique(pog618$S.Prod.Status.))
unique(pog618$S.Prod.Status.)
length(unique(pog618$Alias.Type.))
unique(pog618$Alias.Type.)
which(pog618$S.Prod.Status.==0)
pog618[which(pog618$S.Prod.Status.==0),]
length(unique(pog618$POG..))
head(unique(pog618$POG..))
Jan2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/Jan4_Feb11_2016.csv")
Feb2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/Feb12_March15_2016.csv")
Mar2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/March16_April13_2016.csv")
Apr2016 <- read.csv("~/rprogramming/Apollo/Cafeteria/April14_June6_2016.csv")
# remove columns 4,5,7 and 9 - are gross sales discounts, % sales and % quantity
Jan2016 <- Jan2016[,-c(4,5,7,9)]
Feb2016 <- Feb2016[,-c(4,5,7,9)]
Mar2016 <- Mar2016[,-c(4,5,7,9)]
Apr2016 <- Apr2016[,-c(4,5,7,9)]
temp1 <- transform(Jan2016, date = as.Date(as.character(date), "%m/%d/%Y"))
temp1$Sales.Less.Item.Disc <- as.numeric(sub(",","",temp1$Sales.Less.Item.Disc))
temp2 <- rbind(Feb2016,Mar2016)
temp2 <- rbind(temp2,Apr2016)
temp2 <- transform(temp2, date = as.Date(as.character(date), "%m/%d/%Y"))
temp2$Sales.Less.Item.Disc <- as.numeric(sub(",","",temp2$Sales.Less.Item.Disc))
YTD2016 <- rbind(temp1, temp2)
colnames(YTD2016) <- c("Item", "Family", "Major", "Sales", "Qty", "Price", "Date")
str(YTD2016)
head(YTD2016)
write.csv(YTD2016, file = "~/rprogramming/Apollo/Cafeteria/YTD2016.csv")
write.csv(YTD2016, file = "~/rprogramming/Apollo/Cafeteria/YTD2016.csv", row.names = FALSE)
temp <- YTD2016
temp$day <- weekdays(temp$Date)
temp$week <- week(temp$Date)
temp1 <- aggregate(x = temp[,c("Sales", "Qty")],FUN = sum,by = list(Date = temp$Date))
head(temp1)
write.csv(temp1, file = "~/rprogramming/Apollo/Cafeteria/aggByDate.csv", row.names = FALSE)
library(devtools)
library(slidify)
list.files()
getwd()
setwd("..")
getwd()
slidify("index.Rmd")
setwd("/Users/gardiner/rprogramming/DevelopingDataProducts/first_deck")
slidify("index.Rmd")
install.packages("slidifyLibraries")
library(slidifyLibraries)
slidify("index.Rmd")
install_github("ramanthv/slidifyLibraries")
install_github("slidifyLibraries", "ramnathv")
library(slidifyLibraries
)
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
setwd("..")
getwd()
author("deckjs")
slidify("deckjs/index.Rmd")
slidify("./deckjs/index.Rmd")
list.files()
getwd()
slidify("index.Rmd")
setwd("..")
list.files()
author("first_deck")
author("first_deck")
getwd()
setwd("~/rprogramming/DevelopingDataProducts")
list.files()
author("first_deck")
getwd()
slidify(index.Rmd)
list.files
list.files()
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
rnorm(6)
slidify("index.Rmd")
rnorm(6)
slidify("index.Rmd")
publish(index.Rmd, user = "SGardiner", repo = "test-repo")
list.files()
publish("index.html", user = "SGardiner", repo = "test-repo")
publish(user = "SGardiner", repo = "test-repo")
publish(user = "SGardiner", repo = "dataproducts")
getwd()
cd ..
setwd("..")
getwd()
author("testDeck")
getwd()
slidify("index.Rmd")
list.files()
getwd()
publish(title = <testDeck>, hitml_file = "index.html", host = rpubs)
publish(title = "testDeck", hitml_file = "index.html", host = "rpubs")
publish(title = "testDeck", html_file = "index.html", host = "rpubs")
publish(title = 'first Deck', 'index.html', host = 'rpubs')
